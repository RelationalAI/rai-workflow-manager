name: RAI Workflow Manager Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  Run-RWM-Tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Install Python
      - run: echo "Installing Python"
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Checkout code repo
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      - name: Install Python dependencies
        run: |
          pip install -r $GITHUB_WORKSPACE/requirements.txt
          pip install $GITHUB_WORKSPACE

      # Run Workflow tests
      - name: Python Workflow Manager tests
        run: |
          cd $GITHUB_WORKSPACE/test
          python -m unittest discover

      # Setup config required for Python CLI run
      - name: Config setup
        run: |
          mkdir ~/.rai
          cd ~/.rai
          echo "[default]" > config
          echo "region = us-east" >> config
          echo "host = azure.relationalai.com" >> config
          echo "port = 443" >> config
          echo "client_id = ${{ secrets.CLIENT_ID }}" >> config
          echo "client_secret = ${{ secrets.CLIENT_SECRET }}" >> config

      # Generate prefix for semantic layer service
      - id: generate-prefix
        name: Generate prefix
        run: |
          echo "service_prefix=rwm-test-$(uuidgen)-" >> $GITHUB_OUTPUT
        shell: bash

      # Update loader
      - name: Update loader
        run: |
          cd $GITHUB_WORKSPACE/cli-e2e-test/config
          sed -i 'rai_cloud_account="${{ secrets.RAI_CLOUD_ACCOUNT }}"' loader.toml
          sed -i 'sematic_search_pod_prefix="${{ steps.generate-prefix.outputs.service_prefix }}"' loader.toml

      # Checkout semantic layer service
      - name: Checkout semantic layer service
        uses: actions/checkout@v3
        with:
          repository: RelationalAI/semantic-search
          path: semantic-search
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and run Semantic Layer service
      - name: Build and run Semantic Layer service
        run: |
          cd $GITHUB_WORKSPACE/semantic-search
          ./docker-build
          docker run --rm -d --name testServer -p 8081:8081 semantic-search:latest

      # Run e2e Python CLI test
      - name: Python CLI tests
        run: |
          cd $GITHUB_WORKSPACE/cli-e2e-test
          cat config/loader.toml
          python -m unittest discover

      # Shutdown Semantic Layer service
      - name: Shutdown Semantic Layer service container
        run: docker stop testServer
        if: always()

